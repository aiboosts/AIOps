apiVersion: apps/v1
kind: Deployment
metadata:
  name: high-cpu-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: high-cpu-pod
  template:
    metadata:
      labels:
        app: high-cpu-pod
    spec:
      containers:
        - name: high-cpu-container
          image: nginx:latest
          command:
            - "/bin/sh"
            - "-c"
            - |
              # Start Nginx in the background
              nginx &
              # Simulate high CPU load with an infinite loop
              while true; do 
                echo 'High CPU load' && dd if=/dev/zero of=/dev/null & sleep 5; 
              done
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "200m"        # Minimum CPU required for the container
              memory: "256Mi"     # Minimum memory required for the container
            limits:
              cpu: "500m"         # Maximum CPU usage allowed for the container
              memory: "512Mi"     # Maximum memory usage allowed for the container
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - "pidof"
                - "nginx"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      restartPolicy: Always

# ---
# apiVersion: autoscaling/v2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: high-cpu-hpa
#   namespace: default
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: high-cpu-pod
#   minReplicas: 1
#   maxReplicas: 5
#   metrics:
#     - type: Resource
#       resource:
#         name: cpu
#         target:
#           type: Utilization
#           averageUtilization: 80  # Trigger scaling at 80% CPU utilization
